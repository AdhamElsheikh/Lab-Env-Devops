pipeline {
    agent none

    stages {
        stage('Build and Push Docker Image') {
            agent {
                kubernetes {
                    label 'docker-git-agent'
                    defaultContainer 'docker-git'
                    yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: docker-git-agent
spec:
  containers:
  - name: docker-git
    image: docker:24.0.7-git
    command:
    - cat
    tty: true
    securityContext:
      privileged: true
    volumeMounts:
    - name: docker-sock
      mountPath: /var/run/docker.sock
  volumes:
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
"""
                }
            }

            stages {
                stage('Clone Repo') {
                    steps {
                        container('docker-git') {
                            sh 'git clone https://github.com/sameh-Tawfiq/Microservices'
                        }
                    }
                }

                stage('Create Dockerfile') {
                    steps {
                        container('docker-git') {
                            sh '''
cd Microservices
cat > Dockerfile <<'EOF'
FROM python:3.10-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["python", "run.py"]
EOF
'''
                        }
                    }
                }

                stage('Build Docker Image') {
                    steps {
                        container('docker-git') {
                            sh '''
cd Microservices
docker build --network=host -t adhamelsheikh/myapp:latest .
'''
                        }
                    }
                }

                stage('Login to Docker Hub') {
                    steps {
                        container('docker-git') {
                            sh '''
echo "Elmas10@1973" | docker login -u "adhamelsheikh" --password-stdin
'''
                        }
                    }
                }

                stage('Push Docker Image') {
                    steps {
                        container('docker-git') {
                            sh '''
cd Microservices
docker push adhamelsheikh/myapp:latest
'''
                        }
                    }
                }
            }
        }

        stage('Deploy MyApp Pod') {
            agent {
                kubernetes {
                    label 'kubectl-agent'
                    defaultContainer 'kubectl'
                    yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    type: jenkins-agent
spec:
  serviceAccountName: jenkins-admin
  containers:
  - name: kubectl
    image: bitnami/kubectl:latest
    command:
      - "/bin/sh"
      - "-c"
      - "sleep 99d"
    tty: true
    securityContext:
      runAsUser: 0
  restartPolicy: Never
"""
                }
            }

            steps {
                container('kubectl') {
                    sh """
kubectl apply -f - <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: myapp
  namespace: default
spec:
  containers:
  - name: myapp
    image: adhamelsheikh/myapp:latest
    ports:
    - containerPort: 80
EOF
"""
                }
            }
        }
    }
}
